name: Build & Release

on:
  workflow_dispatch:
    
jobs:
  test:
    name: Test (${{ matrix.os }} - ${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macOS-latest, ubuntu-latest, windows-latest ]
        arch: [ x64 ]
        include:
          - os: macOS-latest
            arch: arm64
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3 # v3.6.0
        with:
          node-version: 16.x
          cache: npm
      - name: Install
        run: npm ci
      - name: test
        run: npm test:ci
      - name: Coveralls
        if: matrix.os == 'ubuntu-latest'
        uses: coverallsapp/github-action@v2 # v1.2.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: test
    name: Build (${{ matrix.os }} - ${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Build for supported platforms
        # https://github.com/electron/electron-packager/blob/ebcbd439ff3e0f6f92fa880ff28a8670a9bcf2ab/src/targets.js#L9
        # 32-bit Linux unsupported as of 2019: https://www.electronjs.org/blog/linux-32bit-support
        os: [ macOS-latest, ubuntu-latest, windows-latest ]
        arch: [ x64, arm64 ]
        include:
        - os: windows-latest
          arch: ia32
        - os: ubuntu-latest
          arch: armv7l
        # Publishing artifacts for multiple Windows architectures has
        # a bug which can cause the wrong architecture to be downloaded
        # for an update, so until that is fixed, only build Windows x64
        exclude:
        - os: windows-latest
          arch: arm64

    steps:
      - uses: actions/checkout@v4 # v3.5.0
      - name: Setup Node.js
        uses: actions/setup-node@v3 # v3.6.0
        with:
          node-version: 16.x
          cache: npm
      - name: Install
        run: npm ci
      - name: Make
        if: startsWith(github.ref, 'refs/tags/')
        run: npm make --arch=${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Archive production artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: ${{ matrix.os }}
      #     path: out/make/**/*
      - name: Release
        uses: softprops/action-gh-release@v1 # v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          files: |
            out/**/*.deb
            out/**/*.dmg
            out/**/*setup*.exe
            out/**/*.nupkg
            out/**/*.rpm
            out/**/*.zip
            out/**/RELEASES
